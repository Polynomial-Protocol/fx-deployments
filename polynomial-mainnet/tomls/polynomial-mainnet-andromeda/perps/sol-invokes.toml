[setting.solPerpsMarketId]

[setting.perpsSolSkewScale]

[setting.perpsSolMaxFundingVelocity]

[setting.PerpsSolMakerFeeRatio]

[setting.PerpsSolTakerFeeRatio]

[setting.PerpsSolMaxMarketSize]

[setting.PerpsSolInitialMarginRatio]

[setting.PerpsSolMaintenanceMarginFraction]

[setting.PerpsSolFlagRewardRatioD18]

[setting.PerpsSolMaxLiquidationLimitAccumulationMultiplier]

[setting.PerpsSolMaxSecondsInLiquidationWindow]

[setting.PerpsSolMaxLiquidationPd]

[setting.PerpsSolEndorsedLiquidator]

[setting.PerpsSolMinimumPositionMargin]

[setting.PerpsSolLockedOiRatio]

[invoke.createSolPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.solPerpsMarketId %>", "Solana", "Sol"]
depends = ["provision.system", "provision.perpsFactory"]

[invoke.setPerpsPriceSol]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= extras.sol_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createSolPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsSolSettlementStrategy] instead.
[invoke.addPerpsSolSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.solPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.sol_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.sol_pyth_settlement_strategy.arg = 2
depends = ["invoke.createSolPerpsMarket"]

[invoke.setPerpsSolSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= extras.sol_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythSolFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.solPerpsMarketId',
    'invoke.addPerpsSolSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythSolFeedId',
    'setting.settlementReward',
]

[invoke.setPerpsSolFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= parseEther(settings.PerpsSolSkewScale) %>",
    "<%= parseEther(settings.PerpsSolMaxFundingVelocity) %>",
]
depends = ["invoke.createSolPerpsMarket"]

[invoke.setPerpsSolOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= parseEther(settings.PerpsSolMakerFeeRatio) %>",
    "<%= parseEther(settings.PerpsSolTakerFeeRatio) %>",
]
depends = ["invoke.createSolPerpsMarket"]

[invoke.setPerpsSolMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= parseEther(settings.PerpsSolMaxMarketSize) %>",
]
depends = ["invoke.createSolPerpsMarket"]

[invoke.setPerpsSolMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= parseEther(settings.PerpsSolMaxMarketValue) %>",
]
depends = ["invoke.createSolPerpsMarket"]

[invoke.setPerpsSolMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= parseEther(settings.PerpsSolMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.PerpsSolMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.PerpsSolMaxLiquidationPd) %>",
    "<%= settings.PerpsSolEndorsedLiquidator %>",
]
depends = ["invoke.createSolPerpsMarket"]

[invoke.setPerpsSolLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= parseEther(settings.PerpsSolInitialMarginRatio) %>",
    "<%= parseEther(settings.PerpsSolMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.PerpsSolMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.PerpsSolFlagRewardRatioD18) %>",
    "<%= parseEther(settings.PerpsSolMinimumPositionMargin) %>",
]
depends = ["invoke.createSolPerpsMarket"]

[invoke.setPerpsSolLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
    "<%= settings.solPerpsMarketId %>",
    "<%= parseEther(settings.PerpsSolLockedOiRatio) %>",
]
depends = ["invoke.createSolPerpsMarket"]
