include = [
    "../../oracles/pyth-bch.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.perpsBchMarketId]

[setting.perpsBchSkewScale]

[setting.perpsBchMaxFundingVelocity]

[setting.perpsBchMakerFeeRatio]

[setting.perpsBchTakerFeeRatio]

[setting.perpsBchMaxMarketSize]

[setting.perpsBchInitialMarginRatio]

[setting.perpsBchMaintenanceMarginScalar]

[setting.perpsBchMinimumInitialMarginRatio]

[setting.perpsBchFlagRewardRatioD18]

[setting.perpsBchMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsBchMaxSecondsInLiquidationWindow]

[setting.perpsBchMinimumPositionMargin]

[setting.perpsBchLockedOiRatio]

[setting.perpsBchSynthMaxCollateralAmount]

[setting.perpsBchMaxLiquidationPd]

[setting.perpsBchEndorsedLiquidator]

[invoke.createperpsBchMarket]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "createMarket"
args = [
    "<%= settings.perpsBchMarketId %>",
    "Bitcoin Cash",
    "BCH",
]
depends = [
    "provision.system",
    "provision.perpsFactory",
]

[invoke.createperpsBchMarket.fromCall]
func = "owner"

[invoke.setperpsBchPrice]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "updatePriceData"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= extras.perpsBch_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchPrice.fromCall]
func = "owner"

[invoke.addperpsBchSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsBchMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.addperpsBchSettlementStrategy.fromCall]
func = "owner"

[invoke.addperpsBchSettlementStrategy.extra.perpsBch_pyth_settlement_strategy]
event = "SettlementStrategyAdded"
arg = 2

[invoke.setperpsBchSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= extras.perpsBch_pyth_settlement_strategy %>",
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.perpsBchFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    "provision.perpsFactory",
    "setting.perpsBchMarketId",
    "invoke.addperpsBchSettlementStrategy",
    "provision.pyth_erc7412_wrapper",
    "setting.bigCapSettlementDelay",
    "setting.bigCapSettlementWindowDuration",
    "setting.perpsBchFeedId",
    "setting.settlementReward",
]

[invoke.setperpsBchSettlementStrategy.fromCall]
func = "owner"

[invoke.setperpsBchFundingParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setFundingParameters"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchSkewScale) %>",
    "<%= parseEther(settings.perpsBchMaxFundingVelocity) %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchFundingParameters.fromCall]
func = "owner"

[invoke.setperpsBchOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setOrderFees"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBchTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchOrderFees.fromCall]
func = "owner"

[invoke.setperpsBchMaxMarketSize]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketSize"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchMaxMarketSize) %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchMaxMarketSize.fromCall]
func = "owner"

[invoke.setperpsBchMaxMarketValue]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchMaxMarketValue) %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchMaxMarketValue.fromCall]
func = "owner"

[invoke.setperpsBchMaxLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsBchMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsBchMaxLiquidationPd) %>",
    "<%= settings.perpsBchEndorsedLiquidator %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchMaxLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsBchLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBchMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBchMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsBchFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsBchMinimumPositionMargin) %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsBchLockedOiRatio]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLockedOiRatio"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchLockedOiRatio) %>",
]
depends = [
    "invoke.createperpsBchMarket",
]

[invoke.setperpsBchLockedOiRatio.fromCall]
func = "owner"
