include = [
    "../../oracles/pyth-ip.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.perpsIpMarketId]

[setting.perpsIpSkewScale]

[setting.perpsIpMaxFundingVelocity]

[setting.perpsIpMakerFeeRatio]

[setting.perpsIpTakerFeeRatio]

[setting.perpsIpMaxMarketSize]

[setting.perpsIpInitialMarginRatio]

[setting.perpsIpMaintenanceMarginScalar]

[setting.perpsIpMinimumInitialMarginRatio]

[setting.perpsIpFlagRewardRatioD18]

[setting.perpsIpMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsIpMaxSecondsInLiquidationWindow]

[setting.perpsIpMinimumPositionMargin]

[setting.perpsIpLockedOiRatio]

[setting.perpsIpSynthMaxCollateralAmount]

[setting.perpsIpMaxLiquidationPd]

[setting.perpsIpEndorsedLiquidator]

[invoke.createperpsIpMarket]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "createMarket"
args = [
    "<%= settings.perpsIpMarketId %>",
    "Story",
    "IP",
]
depends = [
    "provision.system",
    "provision.perpsFactory",
]

[invoke.createperpsIpMarket.fromCall]
func = "owner"

[invoke.setperpsIpPrice]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "updatePriceData"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= extras.perpsIp_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpPrice.fromCall]
func = "owner"

[invoke.addperpsIpSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsIpMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.addperpsIpSettlementStrategy.fromCall]
func = "owner"

[invoke.addperpsIpSettlementStrategy.extra.perpsIp_pyth_settlement_strategy]
event = "SettlementStrategyAdded"
arg = 2

[invoke.setperpsIpSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= extras.perpsIp_pyth_settlement_strategy %>",
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.perpsIpFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    "provision.perpsFactory",
    "setting.perpsIpMarketId",
    "invoke.addperpsIpSettlementStrategy",
    "provision.pyth_erc7412_wrapper",
    "setting.bigCapSettlementDelay",
    "setting.bigCapSettlementWindowDuration",
    "setting.perpsIpFeedId",
    "setting.settlementReward",
]

[invoke.setperpsIpSettlementStrategy.fromCall]
func = "owner"

[invoke.setperpsIpFundingParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setFundingParameters"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= parseEther(settings.perpsIpSkewScale) %>",
    "<%= parseEther(settings.perpsIpMaxFundingVelocity) %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpFundingParameters.fromCall]
func = "owner"

[invoke.setperpsIpOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setOrderFees"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= parseEther(settings.perpsIpMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsIpTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpOrderFees.fromCall]
func = "owner"

[invoke.setperpsIpMaxMarketSize]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketSize"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= parseEther(settings.perpsIpMaxMarketSize) %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpMaxMarketSize.fromCall]
func = "owner"

[invoke.setperpsIpMaxMarketValue]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= parseEther(settings.perpsIpMaxMarketValue) %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpMaxMarketValue.fromCall]
func = "owner"

[invoke.setperpsIpMaxLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= parseEther(settings.perpsIpMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsIpMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsIpMaxLiquidationPd) %>",
    "<%= settings.perpsIpEndorsedLiquidator %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpMaxLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsIpLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= parseEther(settings.perpsIpInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsIpMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsIpMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsIpFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsIpMinimumPositionMargin) %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsIpLockedOiRatio]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLockedOiRatio"
args = [
    "<%= settings.perpsIpMarketId %>",
    "<%= parseEther(settings.perpsIpLockedOiRatio) %>",
]
depends = [
    "invoke.createperpsIpMarket",
]

[invoke.setperpsIpLockedOiRatio.fromCall]
func = "owner"
