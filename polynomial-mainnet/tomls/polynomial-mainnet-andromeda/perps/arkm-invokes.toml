include = [
    "../../oracles/pyth-arkm.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.perpsArkmMarketId]

[setting.perpsArkmSkewScale]

[setting.perpsArkmMaxFundingVelocity]

[setting.perpsArkmMakerFeeRatio]

[setting.perpsArkmTakerFeeRatio]

[setting.perpsArkmMaxMarketSize]

[setting.perpsArkmInitialMarginRatio]

[setting.perpsArkmMaintenanceMarginScalar]

[setting.perpsArkmMinimumInitialMarginRatio]

[setting.perpsArkmFlagRewardRatioD18]

[setting.perpsArkmMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsArkmMaxSecondsInLiquidationWindow]

[setting.perpsArkmMinimumPositionMargin]

[setting.perpsArkmLockedOiRatio]

[setting.perpsArkmSynthMaxCollateralAmount]

[setting.perpsArkmMaxLiquidationPd]

[setting.perpsArkmEndorsedLiquidator]

[invoke.createperpsArkmMarket]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "createMarket"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "Arkham",
    "ARKM",
]
depends = [
    "provision.system",
    "provision.perpsFactory",
]

[invoke.createperpsArkmMarket.fromCall]
func = "owner"

[invoke.setperpsArkmPrice]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "updatePriceData"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= extras.perpsArkm_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmPrice.fromCall]
func = "owner"

[invoke.addperpsArkmSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsArkmMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.addperpsArkmSettlementStrategy.fromCall]
func = "owner"

[invoke.addperpsArkmSettlementStrategy.extra.perpsArkm_pyth_settlement_strategy]
event = "SettlementStrategyAdded"
arg = 2

[invoke.setperpsArkmSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= extras.perpsArkm_pyth_settlement_strategy %>",
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.perpsArkmFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    "provision.perpsFactory",
    "setting.perpsArkmMarketId",
    "invoke.addperpsArkmSettlementStrategy",
    "provision.pyth_erc7412_wrapper",
    "setting.bigCapSettlementDelay",
    "setting.bigCapSettlementWindowDuration",
    "setting.perpsArkmFeedId",
    "setting.settlementReward",
]

[invoke.setperpsArkmSettlementStrategy.fromCall]
func = "owner"

[invoke.setperpsArkmFundingParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setFundingParameters"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmSkewScale) %>",
    "<%= parseEther(settings.perpsArkmMaxFundingVelocity) %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmFundingParameters.fromCall]
func = "owner"

[invoke.setperpsArkmOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setOrderFees"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsArkmTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmOrderFees.fromCall]
func = "owner"

[invoke.setperpsArkmMaxMarketSize]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketSize"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmMaxMarketSize) %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmMaxMarketSize.fromCall]
func = "owner"

[invoke.setperpsArkmMaxMarketValue]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmMaxMarketValue) %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmMaxMarketValue.fromCall]
func = "owner"

[invoke.setperpsArkmMaxLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsArkmMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsArkmMaxLiquidationPd) %>",
    "<%= settings.perpsArkmEndorsedLiquidator %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmMaxLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsArkmLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsArkmMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsArkmMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsArkmFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsArkmMinimumPositionMargin) %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsArkmLockedOiRatio]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLockedOiRatio"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmLockedOiRatio) %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmLockedOiRatio.fromCall]
func = "owner"

[invoke.setperpsArkmLimitOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLimitOrderFees"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsArkmLimitOrderTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsArkmMarket",
]

[invoke.setperpsArkmLimitOrderFees.fromCall]
func = "owner"
