include = [
    "../../oracles/pyth-op.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.opPerpsMarketId]

[setting.perpsOpSkewScale]

[setting.perpsOpMaxFundingVelocity]

[setting.perpsOpMakerFeeRatio]

[setting.perpsOpTakerFeeRatio]

[setting.perpsOpMaxMarketSize]

[setting.perpsOpInitialMarginRatio]

[setting.perpsOpMaintenanceMarginScalar]

[setting.perpsOpFlagRewardRatioD18]

[setting.perpsOpMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsOpMaxSecondsInLiquidationWindow]

[setting.perpsOpMaxLiquidationPd]

[setting.perpsOpEndorsedLiquidator]

[setting.perpsOpMinimumPositionMargin]

[setting.perpsOpLockedOiRatio]

[invoke.createOpPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.opPerpsMarketId %>", "Optimism", "OP"]
depends = ["provision.system", "provision.perpsFactory"]

[invoke.setPerpsPriceOp]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= extras.op_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createOpPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsOpSettlementStrategy] instead.
[invoke.addPerpsOpSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.opPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.op_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.op_pyth_settlement_strategy.arg = 2
depends = ["invoke.createOpPerpsMarket"]

[invoke.setPerpsOpSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= extras.op_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                      # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythOpFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    'provision.perpsFactory',
    'setting.opPerpsMarketId',
    'invoke.addPerpsOpSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythOpFeedId',
    'setting.settlementReward',
]

[invoke.setPerpsOpFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpSkewScale) %>",
    "<%= parseEther(settings.perpsOpMaxFundingVelocity) %>",
]
depends = ["invoke.createOpPerpsMarket"]

[invoke.setPerpsOpOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsOpTakerFeeRatio) %>",
]
depends = ["invoke.createOpPerpsMarket"]

[invoke.setPerpsOpMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpMaxMarketSize) %>",
]
depends = ["invoke.createOpPerpsMarket"]

[invoke.setPerpsOpMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpMaxMarketValue) %>",
]
depends = ["invoke.createOpPerpsMarket"]

[invoke.setPerpsOpMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsOpMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsOpMaxLiquidationPd) %>",
    "<%= settings.perpsOpEndorsedLiquidator %>",
]
depends = ["invoke.createOpPerpsMarket"]

[invoke.setPerpsOpLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsOpMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsOpMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsOpFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsOpMinimumPositionMargin) %>",
]
depends = ["invoke.createOpPerpsMarket"]

[invoke.setPerpsOpLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpLockedOiRatio) %>",
]
depends = ["invoke.createOpPerpsMarket"]

[invoke.setperpsOpLimitOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLimitOrderFees"
args = [
    "<%= settings.opPerpsMarketId %>",
    "<%= parseEther(settings.perpsOpLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsOpLimitOrderTakerFeeRatio) %>",
]
depends = [
    "invoke.createOpPerpsMarket",
]

[invoke.setperpsOpLimitOrderFees.fromCall]
func = "owner"
