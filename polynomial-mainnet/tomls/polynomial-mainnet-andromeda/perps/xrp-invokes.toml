include = [
    "../../oracles/pyth-xrp.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.xrpPerpsMarketId]

[setting.perpsXrpSkewScale]

[setting.perpsXrpMaxFundingVelocity]

[setting.perpsXrpMakerFeeRatio]

[setting.perpsXrpTakerFeeRatio]

[setting.perpsXrpMaxMarketSize]

[setting.perpsXrpInitialMarginRatio]

[setting.perpsXrpMaintenanceMarginScalar]

[setting.perpsXrpFlagRewardRatioD18]

[setting.perpsXrpMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsXrpMaxSecondsInLiquidationWindow]

[setting.perpsXrpMaxLiquidationPd]

[setting.perpsXrpEndorsedLiquidator]

[setting.perpsXrpMinimumPositionMargin]

[setting.perpsXrpLockedOiRatio]

[invoke.createXrpPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.xrpPerpsMarketId %>", "Ripple", "XRP"]
depends = ["provision.system", "provision.perpsFactory"]

[invoke.setPerpsPriceXrp]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= extras.xrp_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createXrpPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsXrpSettlementStrategy] instead.
[invoke.addPerpsXrpSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.xrp_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.xrp_pyth_settlement_strategy.arg = 2
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= extras.xrp_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                      # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythXrpFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    'provision.perpsFactory',
    'setting.xrpPerpsMarketId',
    'invoke.addPerpsXrpSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythXrpFeedId',
    'setting.settlementReward',
]

[invoke.setPerpsXrpFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpSkewScale) %>",
    "<%= parseEther(settings.perpsXrpMaxFundingVelocity) %>",
]
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsXrpTakerFeeRatio) %>",
]
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpLimitOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLimitOrderFees"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsXrpLimitOrderTakerFeeRatio) %>",
]
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpMaxMarketSize) %>",
]
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpMaxMarketValue) %>",
]
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsXrpMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsXrpMaxLiquidationPd) %>",
    "<%= settings.perpsXrpEndorsedLiquidator %>",
]
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsXrpMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsXrpMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsXrpFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsXrpMinimumPositionMargin) %>",
]
depends = ["invoke.createXrpPerpsMarket"]

[invoke.setPerpsXrpLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
    "<%= settings.xrpPerpsMarketId %>",
    "<%= parseEther(settings.perpsXrpLockedOiRatio) %>",
]
depends = ["invoke.createXrpPerpsMarket"]
