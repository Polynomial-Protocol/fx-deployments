include = [
    "../../oracles/pyth-xpl.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.xplPerpsMarketId]

[setting.perpsXplSkewScale]

[setting.perpsXplMaxFundingVelocity]

[setting.perpsXplMakerFeeRatio]

[setting.perpsXplTakerFeeRatio]

[setting.perpsXplMaxMarketSize]

[setting.perpsXplInitialMarginRatio]

[setting.perpsXplMaintenanceMarginFraction]

[setting.perpsXplFlagRewardRatioD18]

[setting.perpsXplMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsXplMaxSecondsInLiquidationWindow]

[setting.perpsXplMaxLiquidationPd]

[setting.perpsXplEndorsedLiquidator]

[setting.perpsXplMinimumPositionMargin]

[setting.perpsXplLockedOiRatio]

[invoke.createXplPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.xplPerpsMarketId %>", "Plasma", "XPL"]
depends = ["provision.system", "provision.perpsFactory"]

[invoke.setPerpsPriceXpl]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= extras.xpl_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createXplPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsXplSettlementStrategy] instead.
[invoke.addPerpsXplSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.xplPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.xpl_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.xpl_pyth_settlement_strategy.arg = 2
depends = ["invoke.createXplPerpsMarket"]

[invoke.setPerpsXplSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= extras.xpl_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                      # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythXplFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    'provision.perpsFactory',
    'setting.xplPerpsMarketId',
    'invoke.addPerpsXplSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythXplFeedId',
    'setting.settlementReward',
]

[invoke.setPerpsXplFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplSkewScale) %>",
    "<%= parseEther(settings.perpsXplMaxFundingVelocity) %>",
]
depends = ["invoke.createXplPerpsMarket"]

[invoke.setPerpsXplOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsXplTakerFeeRatio) %>",
]
depends = ["invoke.createXplPerpsMarket"]

[invoke.setPerpsXplMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplMaxMarketSize) %>",
]
depends = ["invoke.createXplPerpsMarket"]

[invoke.setPerpsXplMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplMaxMarketValue) %>",
]
depends = ["invoke.createXplPerpsMarket"]

[invoke.setPerpsXplMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsXplMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsXplMaxLiquidationPd) %>",
    "<%= settings.perpsXplEndorsedLiquidator %>",
]
depends = ["invoke.createXplPerpsMarket"]

[invoke.setPerpsXplLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsXplMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsXplMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsXplFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsXplMinimumPositionMargin) %>",
]
depends = ["invoke.createXplPerpsMarket"]

[invoke.setPerpsXplLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplLockedOiRatio) %>",
]
depends = ["invoke.createXplPerpsMarket"]

[invoke.setperpsXplLimitOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLimitOrderFees"
args = [
    "<%= settings.xplPerpsMarketId %>",
    "<%= parseEther(settings.perpsXplLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsXplLimitOrderTakerFeeRatio) %>",
]
depends = [
    "invoke.createXplPerpsMarket",
]

[invoke.setperpsXplLimitOrderFees.fromCall]
func = "owner"
