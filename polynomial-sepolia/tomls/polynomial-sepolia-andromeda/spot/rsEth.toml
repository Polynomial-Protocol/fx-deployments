[setting.fxRsEthMaxMarketCollateral]
defaultValue = "<%= parseEther(String(2500)) %>"

[setting.fxRsEthSkewScale]
defaultValue = "<%= parseEther(String(350_000)) %>"

[setting.spotStrictStalenessTolerance]
defaultValue = "300"

[setting.pyth_feed_id_rseth]
defaultValue = "0x0caec284d34d836ca325cf7b3256c078c597bc052fbd3c0283d52b581d68d71f"

[setting.pyth_feed_url_rseth]
defaultValue = "https://hermes.pyth.network/v2/updates/price/latest?ids[]=<%= settings.pyth_feed_id_rseth %>"

[setting.rseth_address]
defaultValue = "0xd80e3957bbE2351Db3D07b3C35fD7494b54DAd93"

[invoke.createRsEthSynth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "owner"
func = "createSynth"
args = ["Polynomial rsETH", "fxRsETH", "<%= settings.owner %>"]
extra.fx_rseth_market_id.event = "SynthRegistered"
extra.fx_rseth_market_id.arg = 0
extra.fx_rseth_token_address.event = "SynthRegistered"
extra.fx_rseth_token_address.arg = 1

[invoke.setSynthPriceRsEth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.fx_rseth_market_id %>"]
func = "updatePriceData"
args = [
    "<%= extras.fx_rseth_market_id %>",
    "<%= extras.rseth_oracle_id %>",
    "<%= extras.rseth_oracle_id %>",
    "<%= settings.spotStrictStalenessTolerance %>",
]

[invoke.setSynthMaxMarketCollateralRsEth]
target = ["system.CoreProxy"]
fromCall.func = "owner"
fromCall.args = []
func = "configureMaximumMarketCollateral"
args = [
    "<%= extras.fx_rseth_market_id %>",
    "<%= settings.rseth_address %>",
    "<%= settings.fxRsEthMaxMarketCollateral %>",
]

[invoke.setSkewScaleRsEth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.fx_rseth_market_id %>"]
func = "setMarketSkewScale"
args = ["<%= extras.fx_rseth_market_id %>", "<%= settings.fxRsEthSkewScale %>"]

[invoke.configureSynthWrapperRsEth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.fx_rseth_market_id %>"]
func = "setWrapper"
args = [
    "<%= extras.fx_rseth_market_id %>",
    "<%= settings.rseth_address %>",
    "<%= settings.fxRsEthMaxMarketCollateral %>",
]

# NOTE set disabled = true to addSettlementStrategy call before initial mainnet deployment
[invoke.SpotMarketProxy_addSettlementStrategy_rseth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.fx_rseth_market_id %>"]
func = "addSettlementStrategy"
args = [
    "<%= extras.fx_rseth_market_id %>",
    { strategyType = "1", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", url = "", settlementReward = 0, minimumUsdExchangeAmount = "0", maxRoundingLoss = "1", priceDeviationTolerance = "0", disabled = false },
]
extra.fx_rseth_settlement_strategy_id.event = "SettlementStrategyAdded"
extra.fx_rseth_settlement_strategy_id.arg = 1

[invoke.SpotMarketProxy_setSettlementStrategy_fxRsEth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.fx_rseth_market_id %>"]
func = "setSettlementStrategy"
args = [
    "<%= extras.fx_rseth_market_id %>",
    "<%= extras.fx_rseth_settlement_strategy_id %>",
    { strategyType = "1", settlementDelay = "<%= settings.big_cap_settlement_delay %>", settlementWindowDuration = "<%= settings.big_cap_settlement_window_duration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pyth_feed_id_rseth %>", url = "<%= settings.pyth_feed_url_rseth %>", settlementReward = "<%= settings.settlement_reward %>", minimumUsdExchangeAmount = "<%= settings.settlement_minimum_usd_exchange_amount %>", maxRoundingLoss = "<%= settings.settlement_max_rounding_loss %>", priceDeviationTolerance = "<%= settings.price_deviation_tolerance %>", disabled = true },
]

[invoke.SpotMarketProxy_setAtomicFixedFee_fxRsEth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.fx_rseth_market_id %>"]
func = "setAtomicFixedFee"
args = ["<%= extras.fx_rseth_market_id %>", "<%= parseEther(String(0.02)) %>"]

[invoke.configure_rseth_collateral]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureCollateral"  # "args" see below in the multiline block

[[invoke.configure_rseth_collateral.args]]
tokenAddress = "<%= settings.rseth_address %>"
oracleNodeId = "<%= extras.rseth_oracle_id %>"
issuanceRatioD18 = "<%= parseEther('2') %>"
liquidationRatioD18 = "<%= parseEther('1.1') %>"
liquidationRewardD18 = "<%= parseEther('0.0001') %>"
minDelegationD18 = "<%= parseEther('0.01') %>"
depositingEnabled = false

[invoke.configure_fxrseth_collateral]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureCollateral"  # "args" see below in the multiline block

[[invoke.configure_fxrseth_collateral.args]]
tokenAddress = "<%= extras.fx_rseth_token_address %>"
oracleNodeId = "<%= extras.rseth_oracle_id %>"
issuanceRatioD18 = "<%= parseEther('2') %>"
liquidationRatioD18 = "<%= parseEther('1.1') %>"
liquidationRewardD18 = "<%= parseEther('0.0001') %>"
minDelegationD18 = "<%= parseEther('0.01') %>"
depositingEnabled = false
