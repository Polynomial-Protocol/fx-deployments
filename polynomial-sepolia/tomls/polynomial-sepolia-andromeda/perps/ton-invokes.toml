include = [
    "../../oracles/pyth-ton.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.perpsTonMarketId]

[setting.perpsTonSkewScale]

[setting.perpsTonMaxFundingVelocity]

[setting.perpsTonMakerFeeRatio]

[setting.perpsTonTakerFeeRatio]

[setting.perpsTonMaxMarketSize]

[setting.perpsTonInitialMarginRatio]

[setting.perpsTonMaintenanceMarginScalar]

[setting.perpsTonMinimumInitialMarginRatio]

[setting.perpsTonFlagRewardRatioD18]

[setting.perpsTonMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsTonMaxSecondsInLiquidationWindow]

[setting.perpsTonMinimumPositionMargin]

[setting.perpsTonLockedOiRatio]

[setting.perpsTonSynthMaxCollateralAmount]

[setting.perpsTonMaxLiquidationPd]

[setting.perpsTonEndorsedLiquidator]

[invoke.createperpsTonMarket]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "createMarket"
args = [
    "<%= settings.perpsTonMarketId %>",
    "Toncoin",
    "TON",
]
depends = [
    "provision.system",
    "provision.perpsFactory",
]

[invoke.createperpsTonMarket.fromCall]
func = "owner"

[invoke.setperpsTonPrice]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "updatePriceData"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= extras.perpsTon_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonPrice.fromCall]
func = "owner"

[invoke.addperpsTonSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsTonMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.addperpsTonSettlementStrategy.fromCall]
func = "owner"

[invoke.addperpsTonSettlementStrategy.extra.perpsTon_pyth_settlement_strategy]
event = "SettlementStrategyAdded"
arg = 2

[invoke.setperpsTonSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= extras.perpsTon_pyth_settlement_strategy %>",
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.perpsTonFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    "provision.perpsFactory",
    "setting.perpsTonMarketId",
    "invoke.addperpsTonSettlementStrategy",
    "provision.pyth_erc7412_wrapper",
    "setting.bigCapSettlementDelay",
    "setting.bigCapSettlementWindowDuration",
    "setting.perpsTonFeedId",
    "setting.settlementReward",
]

[invoke.setperpsTonSettlementStrategy.fromCall]
func = "owner"

[invoke.setperpsTonFundingParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setFundingParameters"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonSkewScale) %>",
    "<%= parseEther(settings.perpsTonMaxFundingVelocity) %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonFundingParameters.fromCall]
func = "owner"

[invoke.setperpsTonOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setOrderFees"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsTonTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonOrderFees.fromCall]
func = "owner"

[invoke.setperpsTonMaxMarketSize]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketSize"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonMaxMarketSize) %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonMaxMarketSize.fromCall]
func = "owner"

[invoke.setperpsTonMaxMarketValue]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonMaxMarketValue) %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonMaxMarketValue.fromCall]
func = "owner"

[invoke.setperpsTonMaxLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsTonMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsTonMaxLiquidationPd) %>",
    "<%= settings.perpsTonEndorsedLiquidator %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonMaxLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsTonLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsTonMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsTonMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsTonFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsTonMinimumPositionMargin) %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsTonLockedOiRatio]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLockedOiRatio"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonLockedOiRatio) %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonLockedOiRatio.fromCall]
func = "owner"

[invoke.setperpsTonLimitOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLimitOrderFees"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsTonLimitOrderTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsTonMarket",
]

[invoke.setperpsTonLimitOrderFees.fromCall]
func = "owner"
