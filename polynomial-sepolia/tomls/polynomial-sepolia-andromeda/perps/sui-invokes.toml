include = [
    "../../oracles/pyth-sui.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.suiPerpsMarketId]

[setting.perpsSuiSkewScale]

[setting.perpsSuiMaxFundingVelocity]

[setting.perpsSuiMakerFeeRatio]

[setting.perpsSuiTakerFeeRatio]

[setting.perpsSuiMaxMarketSize]

[setting.perpsSuiInitialMarginRatio]

[setting.perpsSuiMaintenanceMarginFraction]

[setting.perpsSuiFlagRewardRatioD18]

[setting.perpsSuiMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsSuiMaxSecondsInLiquidationWindow]

[setting.perpsSuiMaxLiquidationPd]

[setting.perpsSuiEndorsedLiquidator]

[setting.perpsSuiMinimumPositionMargin]

[setting.perpsSuiLockedOiRatio]

[invoke.createSuiPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.suiPerpsMarketId %>", "Sui", "SUI"]
depends = ["provision.system", "provision.perpsFactory"]

[invoke.setPerpsPriceSui]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= extras.sui_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createSuiPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsSuiSettlementStrategy] instead.
[invoke.addPerpsSuiSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.suiPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.sui_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.sui_pyth_settlement_strategy.arg = 2
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= extras.sui_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                      # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythSuiFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    'provision.perpsFactory',
    'setting.suiPerpsMarketId',
    'invoke.addPerpsSuiSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythSuiFeedId',
    'setting.settlementReward',
]

[invoke.setPerpsSuiFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiSkewScale) %>",
    "<%= parseEther(settings.perpsSuiMaxFundingVelocity) %>",
]
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsSuiTakerFeeRatio) %>",
]
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiLimitOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLimitOrderFees"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsSuiLimitOrderTakerFeeRatio) %>",
]
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiMaxMarketSize) %>",
]
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiMaxMarketValue) %>",
]
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsSuiMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsSuiMaxLiquidationPd) %>",
    "<%= settings.perpsSuiEndorsedLiquidator %>",
]
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsSuiMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsSuiMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsSuiFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsSuiMinimumPositionMargin) %>",
]
depends = ["invoke.createSuiPerpsMarket"]

[invoke.setPerpsSuiLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
    "<%= settings.suiPerpsMarketId %>",
    "<%= parseEther(settings.perpsSuiLockedOiRatio) %>",
]
depends = ["invoke.createSuiPerpsMarket"]
