include = [
    "../../oracles/pyth-ena.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.enaPerpsMarketId]

[setting.perpsEnaSkewScale]

[setting.perpsEnaMaxFundingVelocity]

[setting.perpsEnaMakerFeeRatio]

[setting.perpsEnaTakerFeeRatio]

[setting.perpsEnaMaxMarketSize]

[setting.perpsEnaInitialMarginRatio]

[setting.perpsEnaMaintenanceMarginScalar]

[setting.perpsEnaFlagRewardRatioD18]

[setting.perpsEnaMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsEnaMaxSecondsInLiquidationWindow]

[setting.perpsEnaMaxLiquidationPd]

[setting.perpsEnaEndorsedLiquidator]

[setting.perpsEnaMinimumPositionMargin]

[setting.perpsEnaLockedOiRatio]

[invoke.createEnaPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.enaPerpsMarketId %>", "Ethena", "ENA"]
depends = ["provision.system", "provision.perpsFactory"]

[invoke.setPerpsPriceEna]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= extras.ena_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createEnaPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsEnaSettlementStrategy] instead.
[invoke.addPerpsEnaSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.enaPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ena_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ena_pyth_settlement_strategy.arg = 2
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= extras.ena_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                      # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythEnaFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    'provision.perpsFactory',
    'setting.enaPerpsMarketId',
    'invoke.addPerpsEnaSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythEnaFeedId',
    'setting.settlementReward',
]

[invoke.setPerpsEnaFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaSkewScale) %>",
    "<%= parseEther(settings.perpsEnaMaxFundingVelocity) %>",
]
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsEnaTakerFeeRatio) %>",
]
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaLimitOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLimitOrderFees"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsEnaLimitOrderTakerFeeRatio) %>",
]
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaMaxMarketSize) %>",
]
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaMaxMarketValue) %>",
]
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsEnaMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsEnaMaxLiquidationPd) %>",
    "<%= settings.perpsEnaEndorsedLiquidator %>",
]
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEnaMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEnaMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsEnaFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsEnaMinimumPositionMargin) %>",
]
depends = ["invoke.createEnaPerpsMarket"]

[invoke.setPerpsEnaLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
    "<%= settings.enaPerpsMarketId %>",
    "<%= parseEther(settings.perpsEnaLockedOiRatio) %>",
]
depends = ["invoke.createEnaPerpsMarket"]
