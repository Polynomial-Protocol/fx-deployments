include = [
    "../../oracles/pyth-bera.toml",
    "../../markets/common/bigcap-settings.toml",
]

[setting.perpsBeraMarketId]

[setting.perpsBeraSkewScale]

[setting.perpsBeraMaxFundingVelocity]

[setting.perpsBeraMakerFeeRatio]

[setting.perpsBeraTakerFeeRatio]

[setting.perpsBeraMaxMarketSize]

[setting.perpsBeraInitialMarginRatio]

[setting.perpsBeraMaintenanceMarginScalar]

[setting.perpsBeraMinimumInitialMarginRatio]

[setting.perpsBeraFlagRewardRatioD18]

[setting.perpsBeraMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsBeraMaxSecondsInLiquidationWindow]

[setting.perpsBeraMinimumPositionMargin]

[setting.perpsBeraLockedOiRatio]

[setting.perpsBeraSynthMaxCollateralAmount]

[setting.perpsBeraMaxLiquidationPd]

[setting.perpsBeraEndorsedLiquidator]

[invoke.createperpsBeraMarket]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "createMarket"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "Berachain",
    "BERA",
]
depends = [
    "provision.system",
    "provision.perpsFactory",
]

[invoke.createperpsBeraMarket.fromCall]
func = "owner"

[invoke.setperpsBeraPrice]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "updatePriceData"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= extras.perpsBera_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraPrice.fromCall]
func = "owner"

[invoke.addperpsBeraSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsBeraMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.addperpsBeraSettlementStrategy.fromCall]
func = "owner"

[invoke.addperpsBeraSettlementStrategy.extra.perpsBera_pyth_settlement_strategy]
event = "SettlementStrategyAdded"
arg = 2

[invoke.setperpsBeraSettlementStrategy]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= extras.perpsBera_pyth_settlement_strategy %>",
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.perpsBeraFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "2" },
]
depends = [
    "provision.perpsFactory",
    "setting.perpsBeraMarketId",
    "invoke.addperpsBeraSettlementStrategy",
    "provision.pyth_erc7412_wrapper",
    "setting.bigCapSettlementDelay",
    "setting.bigCapSettlementWindowDuration",
    "setting.perpsBeraFeedId",
    "setting.settlementReward",
]

[invoke.setperpsBeraSettlementStrategy.fromCall]
func = "owner"

[invoke.setperpsBeraFundingParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setFundingParameters"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraSkewScale) %>",
    "<%= parseEther(settings.perpsBeraMaxFundingVelocity) %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraFundingParameters.fromCall]
func = "owner"

[invoke.setperpsBeraOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setOrderFees"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBeraTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraOrderFees.fromCall]
func = "owner"

[invoke.setperpsBeraMaxMarketSize]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketSize"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraMaxMarketSize) %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraMaxMarketSize.fromCall]
func = "owner"

[invoke.setperpsBeraMaxMarketValue]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraMaxMarketValue) %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraMaxMarketValue.fromCall]
func = "owner"

[invoke.setperpsBeraMaxLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsBeraMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsBeraMaxLiquidationPd) %>",
    "<%= settings.perpsBeraEndorsedLiquidator %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraMaxLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsBeraLiquidationParameters]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBeraMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBeraMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsBeraFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsBeraMinimumPositionMargin) %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraLiquidationParameters.fromCall]
func = "owner"

[invoke.setperpsBeraLockedOiRatio]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLockedOiRatio"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraLockedOiRatio) %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraLockedOiRatio.fromCall]
func = "owner"

[invoke.setperpsBeraLimitOrderFees]
target = [
    "perpsFactory.PerpsMarketProxy",
]
func = "setLimitOrderFees"
args = [
    "<%= settings.perpsBeraMarketId %>",
    "<%= parseEther(settings.perpsBeraLimitOrderMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBeraLimitOrderTakerFeeRatio) %>",
]
depends = [
    "invoke.createperpsBeraMarket",
]

[invoke.setperpsBeraLimitOrderFees.fromCall]
func = "owner"
